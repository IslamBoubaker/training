{
    "sourceFile": "src/Security/AppAuthenticator.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1752145772724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752145832557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,21 +24,21 @@\n     {\n         $this->urlGenerator = $urlGenerator;\n     }\n \n-    public function authenticate(Request $request)\n-    {\n-        $email = $request->request->get('_username', '');\n-        $request->getSession()->set(Security::LAST_USERNAME, $email);\n+   public function authenticate(Request $request): Passport\n+{\n+    $email = $request->request->get('_username', '');\n+    $request->getSession()->set(Security::LAST_USERNAME, $email);\n \n-        return new Passport(\n-            new UserBadge($email),\n-            new PasswordCredentials($request->request->get('_password', '')),\n-            [\n-                new CsrfTokenBadge('authenticate', $request->request->get('_csrf_token')),\n-            ]\n-        );\n-    }\n+    return new Passport(\n+        new UserBadge($email),\n+        new PasswordCredentials($request->request->get('_password', '')),\n+        [\n+            new CsrfTokenBadge('authenticate', $request->request->get('_csrf_token')),\n+        ]\n+    );\n+}\n \n     public function onAuthenticationSuccess(Request $request, TokenInterface $token, string $firewallName): ?RedirectResponse\n     {\n         if ($targetPath = $this->getTargetPath($request->getSession(), $firewallName)) {\n"
                },
                {
                    "date": 1752146221448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,15 @@\n use Symfony\\Component\\Security\\Http\\Util\\TargetPathTrait;\n use Symfony\\Component\\Security\\Core\\User\\UserInterface;\n use Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\n \n+// --- AJOUTEZ CES LIGNES ---\n+use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Passport;\n+use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\UserBadge;\n+use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Credentials\\PasswordCredentials; // Note: PasswordCredentials est dans le sous-namespace Credentials\n+use Symfony\\Component\\Security\\Http\\Authenticator\\Passport\\Badge\\CsrfTokenBadge;\n+// -------------------------\n+\n class AppAuthenticator extends AbstractLoginFormAuthenticator\n {\n     use TargetPathTrait;\n \n@@ -24,21 +31,21 @@\n     {\n         $this->urlGenerator = $urlGenerator;\n     }\n \n-   public function authenticate(Request $request): Passport\n-{\n-    $email = $request->request->get('_username', '');\n-    $request->getSession()->set(Security::LAST_USERNAME, $email);\n+    public function authenticate(Request $request): Passport\n+    {\n+        $email = $request->request->get('_username', '');\n+        $request->getSession()->set(Security::LAST_USERNAME, $email);\n \n-    return new Passport(\n-        new UserBadge($email),\n-        new PasswordCredentials($request->request->get('_password', '')),\n-        [\n-            new CsrfTokenBadge('authenticate', $request->request->get('_csrf_token')),\n-        ]\n-    );\n-}\n+        return new Passport(\n+            new UserBadge($email),\n+            new PasswordCredentials($request->request->get('_password', '')),\n+            [\n+                new CsrfTokenBadge('authenticate', $request->request->get('_csrf_token')),\n+            ]\n+        );\n+    }\n \n     public function onAuthenticationSuccess(Request $request, TokenInterface $token, string $firewallName): ?RedirectResponse\n     {\n         if ($targetPath = $this->getTargetPath($request->getSession(), $firewallName)) {\n@@ -52,5 +59,5 @@\n     protected function getLoginUrl(Request $request): string\n     {\n         return $this->urlGenerator->generate('login');\n     }\n-}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752146623192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     }\n \n     public function authenticate(Request $request): Passport\n     {\n-        $email = $request->request->get('_username', '');\n+        $email = $request->request->get('', '');\n         $request->getSession()->set(Security::LAST_USERNAME, $email);\n \n         return new Passport(\n             new UserBadge($email),\n"
                },
                {
                    "date": 1752146630457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     }\n \n     public function authenticate(Request $request): Passport\n     {\n-        $email = $request->request->get('', '');\n+        $email = $request->request->get('admin@admin.fr', '');\n         $request->getSession()->set(Security::LAST_USERNAME, $email);\n \n         return new Passport(\n             new UserBadge($email),\n"
                }
            ],
            "date": 1752145772724,
            "name": "Commit-0",
            "content": "<?php\n// src/Security/AppAuthenticator.php\n\nnamespace App\\Security;\n\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\nuse Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;\nuse Symfony\\Component\\Security\\Core\\Security;\nuse Symfony\\Component\\Security\\Core\\User\\UserProviderInterface;\nuse Symfony\\Component\\Security\\Http\\Authenticator\\AbstractLoginFormAuthenticator;\nuse Symfony\\Component\\Security\\Http\\Util\\TargetPathTrait;\nuse Symfony\\Component\\Security\\Core\\User\\UserInterface;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\n\nclass AppAuthenticator extends AbstractLoginFormAuthenticator\n{\n    use TargetPathTrait;\n\n    private UrlGeneratorInterface $urlGenerator;\n\n    public function __construct(UrlGeneratorInterface $urlGenerator)\n    {\n        $this->urlGenerator = $urlGenerator;\n    }\n\n    public function authenticate(Request $request)\n    {\n        $email = $request->request->get('_username', '');\n        $request->getSession()->set(Security::LAST_USERNAME, $email);\n\n        return new Passport(\n            new UserBadge($email),\n            new PasswordCredentials($request->request->get('_password', '')),\n            [\n                new CsrfTokenBadge('authenticate', $request->request->get('_csrf_token')),\n            ]\n        );\n    }\n\n    public function onAuthenticationSuccess(Request $request, TokenInterface $token, string $firewallName): ?RedirectResponse\n    {\n        if ($targetPath = $this->getTargetPath($request->getSession(), $firewallName)) {\n            return new RedirectResponse($targetPath);\n        }\n\n        // Redirection par défaut après login\n        return new RedirectResponse($this->urlGenerator->generate('dashboard'));\n    }\n\n    protected function getLoginUrl(Request $request): string\n    {\n        return $this->urlGenerator->generate('login');\n    }\n}\n"
        }
    ]
}