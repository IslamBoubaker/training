{
    "sourceFile": "src/DataFixtures/AppFixtures.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1752146820640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752146828098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n-// src/DataFixtures/AppFixtures.php\n+<?php\n+\n namespace App\\DataFixtures;\n \n use App\\Entity\\User; // Ou App\\Entity\\Responsable\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n"
                },
                {
                    "date": 1752146835077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \n     public function load(ObjectManager $manager): void\n     {\n         $user = new User(); // Ou new Responsable()\n-        $user->setEmail('admin@example.com');\n+        $user->setEmail('admin');\n         $user->setRoles(['ROLE_ADMIN']);\n         $hashedPassword = $this->passwordHasher->hashPassword(\n             $user,\n             'password' // Le mot de passe en clair\n"
                },
                {
                    "date": 1752146846376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,13 +18,13 @@\n \n     public function load(ObjectManager $manager): void\n     {\n         $user = new User(); // Ou new Responsable()\n-        $user->setEmail('admin');\n+        $user->setEmail('admin@admin.fr');\n         $user->setRoles(['ROLE_ADMIN']);\n         $hashedPassword = $this->passwordHasher->hashPassword(\n             $user,\n-            'password' // Le mot de passe en clair\n+            '123123' // Le mot de passe en clair\n         );\n         $user->setPassword($hashedPassword);\n \n         $manager->persist($user);\n"
                },
                {
                    "date": 1752146898887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,13 +18,13 @@\n \n     public function load(ObjectManager $manager): void\n     {\n         $user = new User(); // Ou new Responsable()\n-        $user->setEmail('admin@admin.fr');\n+        $user->setEmail('admin@example.com');\n         $user->setRoles(['ROLE_ADMIN']);\n         $hashedPassword = $this->passwordHasher->hashPassword(\n             $user,\n-            '123123' // Le mot de passe en clair\n+            'password' // Le mot de passe en clair\n         );\n         $user->setPassword($hashedPassword);\n \n         $manager->persist($user);\n"
                },
                {
                    "date": 1752146981435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,13 @@\n-<?php\n-\n+// src/DataFixtures/UserFixtures.php (ou AppFixtures.php)\n namespace App\\DataFixtures;\n \n-use App\\Entity\\User; // Ou App\\Entity\\Responsable\n+use App\\Entity\\User; // Assurez-vous d'utiliser la bonne entit√© (User ou Responsable)\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n use Doctrine\\Persistence\\ObjectManager;\n-use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n+use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface; // N'oubliez pas le use !\n \n-class AppFixtures extends Fixture\n+class UserFixtures extends Fixture\n {\n     private UserPasswordHasherInterface $passwordHasher;\n \n     public function __construct(UserPasswordHasherInterface $passwordHasher)\n@@ -17,17 +16,26 @@\n     }\n \n     public function load(ObjectManager $manager): void\n     {\n-        $user = new User(); // Ou new Responsable()\n-        $user->setEmail('admin@example.com');\n-        $user->setRoles(['ROLE_ADMIN']);\n-        $hashedPassword = $this->passwordHasher->hashPassword(\n-            $user,\n-            'password' // Le mot de passe en clair\n+        // Cr√©ation d'un utilisateur de test (par exemple, un administrateur)\n+        $userAdmin = new User(); // Ou new Responsable() si c'est votre entit√© de connexion\n+        $userAdmin->setEmail('admin@example.com'); // L'email que vous utiliserez pour vous connecter\n+        $userAdmin->setRoles(['ROLE_ADMIN']); // Attribuez un r√¥le appropri√©\n+        $userAdmin->setPassword(\n+            $this->passwordHasher->hashPassword(\n+                $userAdmin,\n+                'password' // Le mot de passe en clair que vous utiliserez pour vous connecter\n+            )\n         );\n-        $user->setPassword($hashedPassword);\n+        $manager->persist($userAdmin);\n \n-        $manager->persist($user);\n-        $manager->flush();\n+        // Vous pouvez ajouter d'autres utilisateurs si n√©cessaire\n+        // $userClient = new User();\n+        // $userClient->setEmail('client@example.com');\n+        // $userClient->setRoles(['ROLE_CLIENT']);\n+        // $userClient->setPassword($this->passwordHasher->hashPassword($userClient, 'clientpass'));\n+        // $manager->persist($userClient);\n+\n+        $manager->flush(); // Enregistre les utilisateurs dans la base de donn√©es\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752146986897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+<?php\n+\n+// src/DataFixtures/UserFixtures.php (ou AppFixtures.php)\n+namespace App\\DataFixtures;\n+\n+use App\\Entity\\User; // Assurez-vous d'utiliser la bonne entit√© (User ou Responsable)\n+use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n+use Doctrine\\Persistence\\ObjectManager;\n+use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface; // N'oubliez pas le use !\n+\n+class UserFixtures extends Fixture\n+{\n+    private UserPasswordHasherInterface $passwordHasher;\n+\n+    public function __construct(UserPasswordHasherInterface $passwordHasher)\n+    {\n+        $this->passwordHasher = $passwordHasher;\n+    }\n+\n+    public function load(ObjectManager $manager): void\n+    {\n+        // Cr√©ation d'un utilisateur de test (par exemple, un administrateur)\n+        $userAdmin = new User(); // Ou new Responsable() si c'est votre entit√© de connexion\n+        $userAdmin->setEmail('admin@example.com'); // L'email que vous utiliserez pour vous connecter\n+        $userAdmin->setRoles(['ROLE_ADMIN']); // Attribuez un r√¥le appropri√©\n+        $userAdmin->setPassword(\n+            $this->passwordHasher->hashPassword(\n+                $userAdmin,\n+                'password' // Le mot de passe en clair que vous utiliserez pour vous connecter\n+            )\n+        );\n+        $manager->persist($userAdmin);\n+\n+        // Vous pouvez ajouter d'autres utilisateurs si n√©cessaire\n+        // $userClient = new User();\n+        // $userClient->setEmail('client@example.com');\n+        // $userClient->setRoles(['ROLE_CLIENT']);\n+        // $userClient->setPassword($this->passwordHasher->hashPassword($userClient, 'clientpass'));\n+        // $manager->persist($userClient);\n+\n+        $manager->flush(); // Enregistre les utilisateurs dans la base de donn√©es\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752147300685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,14 @@\n <?php\n \n-// src/DataFixtures/UserFixtures.php (ou AppFixtures.php)\n namespace App\\DataFixtures;\n \n-use App\\Entity\\User; // Assurez-vous d'utiliser la bonne entit√© (User ou Responsable)\n+use App\\Entity\\User; // Ou App\\Entity\\Responsable selon ce que tu utilises\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n use Doctrine\\Persistence\\ObjectManager;\n-use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface; // N'oubliez pas le use !\n+use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n \n-class UserFixtures extends Fixture\n+class AppFixtures extends Fixture\n {\n     private UserPasswordHasherInterface $passwordHasher;\n \n     public function __construct(UserPasswordHasherInterface $passwordHasher)\n@@ -18,67 +17,20 @@\n     }\n \n     public function load(ObjectManager $manager): void\n     {\n-        // Cr√©ation d'un utilisateur de test (par exemple, un administrateur)\n-        $userAdmin = new User(); // Ou new Responsable() si c'est votre entit√© de connexion\n-        $userAdmin->setEmail('admin@example.com'); // L'email que vous utiliserez pour vous connecter\n-        $userAdmin->setRoles(['ROLE_ADMIN']); // Attribuez un r√¥le appropri√©\n-        $userAdmin->setPassword(\n-            $this->passwordHasher->hashPassword(\n-                $userAdmin,\n-                'password' // Le mot de passe en clair que vous utiliserez pour vous connecter\n-            )\n-        );\n-        $manager->persist($userAdmin);\n+        $user = new User(); // Ou new Responsable() si tu utilises cette classe\n \n-        // Vous pouvez ajouter d'autres utilisateurs si n√©cessaire\n-        // $userClient = new User();\n-        // $userClient->setEmail('client@example.com');\n-        // $userClient->setRoles(['ROLE_CLIENT']);\n-        // $userClient->setPassword($this->passwordHasher->hashPassword($userClient, 'clientpass'));\n-        // $manager->persist($userClient);\n+        $user->setUsername('admin'); // üî¥ Important si ton entit√© a un champ `username`\n+        $user->setEmail('admin@example.com');\n+        $user->setRoles(['ROLE_ADMIN']);\n \n-        $manager->flush(); // Enregistre les utilisateurs dans la base de donn√©es\n-    }\n-}\n-// src/DataFixtures/UserFixtures.php (ou AppFixtures.php)\n-namespace App\\DataFixtures;\n-\n-use App\\Entity\\User; // Assurez-vous d'utiliser la bonne entit√© (User ou Responsable)\n-use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n-use Doctrine\\Persistence\\ObjectManager;\n-use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface; // N'oubliez pas le use !\n-\n-class UserFixtures extends Fixture\n-{\n-    private UserPasswordHasherInterface $passwordHasher;\n-\n-    public function __construct(UserPasswordHasherInterface $passwordHasher)\n-    {\n-        $this->passwordHasher = $passwordHasher;\n-    }\n-\n-    public function load(ObjectManager $manager): void\n-    {\n-        // Cr√©ation d'un utilisateur de test (par exemple, un administrateur)\n-        $userAdmin = new User(); // Ou new Responsable() si c'est votre entit√© de connexion\n-        $userAdmin->setEmail('admin@example.com'); // L'email que vous utiliserez pour vous connecter\n-        $userAdmin->setRoles(['ROLE_ADMIN']); // Attribuez un r√¥le appropri√©\n-        $userAdmin->setPassword(\n-            $this->passwordHasher->hashPassword(\n-                $userAdmin,\n-                'password' // Le mot de passe en clair que vous utiliserez pour vous connecter\n-            )\n+        $hashedPassword = $this->passwordHasher->hashPassword(\n+            $user,\n+            'password' // mot de passe en clair\n         );\n-        $manager->persist($userAdmin);\n+        $user->setPassword($hashedPassword);\n \n-        // Vous pouvez ajouter d'autres utilisateurs si n√©cessaire\n-        // $userClient = new User();\n\\ No newline at end of file\n-        // $userClient->setEmail('client@example.com');\n-        // $userClient->setRoles(['ROLE_CLIENT']);\n-        // $userClient->setPassword($this->passwordHasher->hashPassword($userClient, 'clientpass'));\n-        // $manager->persist($userClient);\n-\n-        $manager->flush(); // Enregistre les utilisateurs dans la base de donn√©es\n+        $manager->persist($user);\n+        $manager->flush();\n     }\n-}\n+}\n"
                },
                {
                    "date": 1752147309139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <?php\n \n namespace App\\DataFixtures;\n \n-use App\\Entity\\User; // Ou App\\Entity\\Responsable selon ce que tu utilises\n+use App\\Entity\\User; // Ou App\\Entity\\Responsable\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n use Doctrine\\Persistence\\ObjectManager;\n use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n \n@@ -17,20 +17,17 @@\n     }\n \n     public function load(ObjectManager $manager): void\n     {\n-        $user = new User(); // Ou new Responsable() si tu utilises cette classe\n-\n-        $user->setUsername('admin'); // üî¥ Important si ton entit√© a un champ `username`\n+        $user = new User(); // Ou new Responsable()\n         $user->setEmail('admin@example.com');\n         $user->setRoles(['ROLE_ADMIN']);\n-\n         $hashedPassword = $this->passwordHasher->hashPassword(\n             $user,\n-            'password' // mot de passe en clair\n+            'password' // Le mot de passe en clair\n         );\n         $user->setPassword($hashedPassword);\n \n         $manager->persist($user);\n         $manager->flush();\n     }\n-}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1752147316113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <?php\n \n namespace App\\DataFixtures;\n \n-use App\\Entity\\User; // Ou App\\Entity\\Responsable\n+use App\\Entity\\User; // Ou App\\Entity\\Responsable selon ce que tu utilises\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n use Doctrine\\Persistence\\ObjectManager;\n use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n \n@@ -17,17 +17,19 @@\n     }\n \n     public function load(ObjectManager $manager): void\n     {\n-        $user = new User(); // Ou new Responsable()\n+        $user = new User(); // Ou new Responsable() si tu utilises cette classe\n+\n         $user->setEmail('admin@example.com');\n         $user->setRoles(['ROLE_ADMIN']);\n+\n         $hashedPassword = $this->passwordHasher->hashPassword(\n             $user,\n-            'password' // Le mot de passe en clair\n+            'password' // mot de passe en clair\n         );\n         $user->setPassword($hashedPassword);\n \n\\ No newline at end of file\n         $manager->persist($user);\n         $manager->flush();\n     }\n-}\n+}\n"
                },
                {
                    "date": 1752147496063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <?php\n \n namespace App\\DataFixtures;\n \n-use App\\Entity\\User; // Ou App\\Entity\\Responsable selon ce que tu utilises\n+use App\\Entity\\User; // ou App\\Entity\\Responsable si tu veux le faire avec cette classe\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n use Doctrine\\Persistence\\ObjectManager;\n use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n \n@@ -17,19 +17,71 @@\n     }\n \n     public function load(ObjectManager $manager): void\n     {\n-        $user = new User(); // Ou new Responsable() si tu utilises cette classe\n+        // ADMIN\n+        $admin = new User();\n+        $admin->setUsername('admin');\n+        $admin->setEmail('admin@example.com');\n+        $admin->setRoles(['ROLE_ADMIN']);\n+        $admin->setPassword($this->passwordHasher->hashPassword($admin, 'adminpass'));\n+        $manager->persist($admin);\n \n-        $user->setEmail('admin@example.com');\n-        $user->setRoles(['ROLE_ADMIN']);\n+        // VISITEUR\n+        $visiteur = new User();\n+        $visiteur->setUsername('visiteur');\n+        $visiteur->setEmail('visiteur@example.com');\n\\ No newline at end of file\n+        $visiteur->setRoles(['ROLE_VISITEUR']);\n+        $visiteur->setPassword($this->passwordHasher->hashPassword($visiteur, 'visiteurpass'));\n+        $manager->persist($visiteur);\n \n-        $hashedPassword = $this->passwordHasher->hashPassword(\n-            $user,\n-            'password' // mot de passe en clair\n-        );\n-        $user->setPassword($hashedPassword);\n+        // CLIENT\n+        $client = new User();\n+        $client->setUsername('client');\n+        $client->setEmail('client@example.com');\n+        $client->setRoles(['ROLE_CLIENT']);\n+        $client->setPassword($this->passwordHasher->hashPassword($client, 'clientpass'));\n+        $manager->persist($client);\n \n-        $manager->persist($user);\n+        // RESPONSABLE CATALOGUE\n+        $catalogue = new User();\n+        $catalogue->setUsername('catalogue');\n+        $catalogue->setEmail('catalogue@example.com');\n+        $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n+        $catalogue->setPassword($this->passwordHasher->hashPassword($catalogue, 'cataloguepass'));\n+        $manager->persist($catalogue);\n+\n+        // RESPONSABLE LOGISTIQUE\n+        $logistique = new User();\n+        $logistique->setUsername('logistique');\n+        $logistique->setEmail('logistique@example.com');\n+        $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n+        $logistique->setPassword($this->passwordHasher->hashPassword($logistique, 'logistiquepass'));\n+        $manager->persist($logistique);\n+\n+        // RESPONSABLE FORMATION INTER\n+        $formationInter = new User();\n+        $formationInter->setUsername('formationinter');\n+        $formationInter->setEmail('formationinter@example.com');\n+        $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n+        $formationInter->setPassword($this->passwordHasher->hashPassword($formationInter, 'interpass'));\n+        $manager->persist($formationInter);\n+\n+        // FORMATEUR\n+        $formateur = new User();\n+        $formateur->setUsername('formateur');\n+        $formateur->setEmail('formateur@example.com');\n+        $formateur->setRoles(['ROLE_FORMATEUR']);\n+        $formateur->setPassword($this->passwordHasher->hashPassword($formateur, 'formateurpass'));\n+        $manager->persist($formateur);\n+\n+        // STAGIAIRE\n+        $stagiaire = new User();\n+        $stagiaire->setUsername('stagiaire');\n+        $stagiaire->setEmail('stagiaire@example.com');\n+        $stagiaire->setRoles(['ROLE_STAGIAIRE']);\n+        $stagiaire->setPassword($this->passwordHasher->hashPassword($stagiaire, 'stagiairepass'));\n+        $manager->persist($stagiaire);\n+\n         $manager->flush();\n     }\n-}\n+}\n"
                },
                {
                    "date": 1752147982655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     public function load(ObjectManager $manager): void\n     {\n         // ADMIN\n         $admin = new User();\n-        $admin->setUsername('admin');\n+        // $admin->setUsername('admin');\n         $admin->setEmail('admin@example.com');\n         $admin->setRoles(['ROLE_ADMIN']);\n         $admin->setPassword($this->passwordHasher->hashPassword($admin, 'adminpass'));\n         $manager->persist($admin);\n@@ -83,5 +83,5 @@\n         $manager->persist($stagiaire);\n \n         $manager->flush();\n     }\n-}\n\\ No newline at end of file\n+}\n"
                },
                {
                    "date": 1752147988686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,33 +27,33 @@\n         $manager->persist($admin);\n \n         // VISITEUR\n         $visiteur = new User();\n-        $visiteur->setUsername('visiteur');\n+        // $visiteur->setUsername('visiteur');\n         $visiteur->setEmail('visiteur@example.com');\n         $visiteur->setRoles(['ROLE_VISITEUR']);\n         $visiteur->setPassword($this->passwordHasher->hashPassword($visiteur, 'visiteurpass'));\n         $manager->persist($visiteur);\n \n         // CLIENT\n         $client = new User();\n-        $client->setUsername('client');\n+        // $client->setUsername('client');\n         $client->setEmail('client@example.com');\n         $client->setRoles(['ROLE_CLIENT']);\n         $client->setPassword($this->passwordHasher->hashPassword($client, 'clientpass'));\n         $manager->persist($client);\n \n         // RESPONSABLE CATALOGUE\n         $catalogue = new User();\n-        $catalogue->setUsername('catalogue');\n+        // $catalogue->setUsername('catalogue');\n         $catalogue->setEmail('catalogue@example.com');\n         $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n         $catalogue->setPassword($this->passwordHasher->hashPassword($catalogue, 'cataloguepass'));\n         $manager->persist($catalogue);\n \n         // RESPONSABLE LOGISTIQUE\n         $logistique = new User();\n-        $logistique->setUsername('logistique');\n+        // $logistique->setUsername('logistique');\n         $logistique->setEmail('logistique@example.com');\n         $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n         $logistique->setPassword($this->passwordHasher->hashPassword($logistique, 'logistiquepass'));\n         $manager->persist($logistique);\n@@ -67,9 +67,9 @@\n         $manager->persist($formationInter);\n \n         // FORMATEUR\n         $formateur = new User();\n-        $formateur->setUsername('formateur');\n+        // $formateur->setUsername('formateur');\n         $formateur->setEmail('formateur@example.com');\n         $formateur->setRoles(['ROLE_FORMATEUR']);\n         $formateur->setPassword($this->passwordHasher->hashPassword($formateur, 'formateurpass'));\n         $manager->persist($formateur);\n"
                },
                {
                    "date": 1752148237362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         $manager->persist($logistique);\n \n         // RESPONSABLE FORMATION INTER\n         $formationInter = new User();\n-        $formationInter->setUsername('formationinter');\n+        // $formationInter->setUsername('formationinter');\n         $formationInter->setEmail('formationinter@example.com');\n         $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n         $formationInter->setPassword($this->passwordHasher->hashPassword($formationInter, 'interpass'));\n         $manager->persist($formationInter);\n@@ -75,9 +75,9 @@\n         $manager->persist($formateur);\n \n         // STAGIAIRE\n         $stagiaire = new User();\n-        $stagiaire->setUsername('stagiaire');\n+        // $stagiaire->setUsername('stagiaire');\n         $stagiaire->setEmail('stagiaire@example.com');\n         $stagiaire->setRoles(['ROLE_STAGIAIRE']);\n         $stagiaire->setPassword($this->passwordHasher->hashPassword($stagiaire, 'stagiairepass'));\n         $manager->persist($stagiaire);\n"
                },
                {
                    "date": 1752149315595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <?php\n \n namespace App\\DataFixtures;\n \n-use App\\Entity\\User; // ou App\\Entity\\Responsable si tu veux le faire avec cette classe\n+use App\\Entity\\Responsable;\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n use Doctrine\\Persistence\\ObjectManager;\n use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n \n@@ -17,71 +17,43 @@\n     }\n \n     public function load(ObjectManager $manager): void\n     {\n-        // ADMIN\n-        $admin = new User();\n-        // $admin->setUsername('admin');\n+        // Admin\n+        $admin = new Responsable();\n         $admin->setEmail('admin@example.com');\n         $admin->setRoles(['ROLE_ADMIN']);\n-        $admin->setPassword($this->passwordHasher->hashPassword($admin, 'adminpass'));\n+        $admin->setPassword(\n+            $this->passwordHasher->hashPassword($admin, 'adminpass123')\n+        );\n         $manager->persist($admin);\n \n-        // VISITEUR\n-        $visiteur = new User();\n-        // $visiteur->setUsername('visiteur');\n-        $visiteur->setEmail('visiteur@example.com');\n-        $visiteur->setRoles(['ROLE_VISITEUR']);\n-        $visiteur->setPassword($this->passwordHasher->hashPassword($visiteur, 'visiteurpass'));\n-        $manager->persist($visiteur);\n-\n-        // CLIENT\n-        $client = new User();\n-        // $client->setUsername('client');\n-        $client->setEmail('client@example.com');\n-        $client->setRoles(['ROLE_CLIENT']);\n-        $client->setPassword($this->passwordHasher->hashPassword($client, 'clientpass'));\n-        $manager->persist($client);\n-\n-        // RESPONSABLE CATALOGUE\n-        $catalogue = new User();\n-        // $catalogue->setUsername('catalogue');\n+        // Responsable Catalogue\n+        $catalogue = new Responsable();\n         $catalogue->setEmail('catalogue@example.com');\n         $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n-        $catalogue->setPassword($this->passwordHasher->hashPassword($catalogue, 'cataloguepass'));\n+        $catalogue->setPassword(\n+            $this->passwordHasher->hashPassword($catalogue, 'cataloguepass')\n+        );\n         $manager->persist($catalogue);\n \n-        // RESPONSABLE LOGISTIQUE\n-        $logistique = new User();\n-        // $logistique->setUsername('logistique');\n+        // Responsable Logistique\n+        $logistique = new Responsable();\n         $logistique->setEmail('logistique@example.com');\n         $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n-        $logistique->setPassword($this->passwordHasher->hashPassword($logistique, 'logistiquepass'));\n+        $logistique->setPassword(\n+            $this->passwordHasher->hashPassword($logistique, 'logipass123')\n+        );\n         $manager->persist($logistique);\n \n-        // RESPONSABLE FORMATION INTER\n-        $formationInter = new User();\n-        // $formationInter->setUsername('formationinter');\n-        $formationInter->setEmail('formationinter@example.com');\n+        // Responsable Formation Inter\n+        $formationInter = new Responsable();\n+        $formationInter->setEmail('formation.inter@example.com');\n         $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n-        $formationInter->setPassword($this->passwordHasher->hashPassword($formationInter, 'interpass'));\n+        $formationInter->setPassword(\n+            $this->passwordHasher->hashPassword($formationInter, 'formationpass')\n+        );\n         $manager->persist($formationInter);\n \n-        // FORMATEUR\n-        $formateur = new User();\n-        // $formateur->setUsername('formateur');\n-        $formateur->setEmail('formateur@example.com');\n-        $formateur->setRoles(['ROLE_FORMATEUR']);\n-        $formateur->setPassword($this->passwordHasher->hashPassword($formateur, 'formateurpass'));\n-        $manager->persist($formateur);\n-\n-        // STAGIAIRE\n-        $stagiaire = new User();\n-        // $stagiaire->setUsername('stagiaire');\n-        $stagiaire->setEmail('stagiaire@example.com');\n-        $stagiaire->setRoles(['ROLE_STAGIAIRE']);\n-        $stagiaire->setPassword($this->passwordHasher->hashPassword($stagiaire, 'stagiairepass'));\n-        $manager->persist($stagiaire);\n-\n         $manager->flush();\n     }\n }\n"
                },
                {
                    "date": 1752149399489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n     public function load(ObjectManager $manager): void\n     {\n         // Admin\n         $admin = new Responsable();\n+        $admin->setNom('Admin G√©n√©ral');\n         $admin->setEmail('admin@example.com');\n         $admin->setRoles(['ROLE_ADMIN']);\n         $admin->setPassword(\n             $this->passwordHasher->hashPassword($admin, 'adminpass123')\n@@ -28,8 +29,9 @@\n         $manager->persist($admin);\n \n         // Responsable Catalogue\n         $catalogue = new Responsable();\n+        $catalogue->setNom('Responsable Catalogue');\n         $catalogue->setEmail('catalogue@example.com');\n         $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n         $catalogue->setPassword(\n             $this->passwordHasher->hashPassword($catalogue, 'cataloguepass')\n@@ -37,8 +39,9 @@\n         $manager->persist($catalogue);\n \n         // Responsable Logistique\n         $logistique = new Responsable();\n+        $logistique->setNom('Responsable Logistique');\n         $logistique->setEmail('logistique@example.com');\n         $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n         $logistique->setPassword(\n             $this->passwordHasher->hashPassword($logistique, 'logipass123')\n@@ -46,8 +49,9 @@\n         $manager->persist($logistique);\n \n         // Responsable Formation Inter\n         $formationInter = new Responsable();\n+        $formationInter->setNom('Responsable Formation Inter');\n         $formationInter->setEmail('formation.inter@example.com');\n         $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n         $formationInter->setPassword(\n             $this->passwordHasher->hashPassword($formationInter, 'formationpass')\n"
                },
                {
                    "date": 1752149435182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,10 @@\n     public function load(ObjectManager $manager): void\n     {\n         // Admin\n         $admin = new Responsable();\n-        $admin->setNom('Admin G√©n√©ral');\n+        $admin->setNom('Admin');\n+        $admin->setPrenom('G√©n√©ral');\n         $admin->setEmail('admin@example.com');\n         $admin->setRoles(['ROLE_ADMIN']);\n         $admin->setPassword(\n             $this->passwordHasher->hashPassword($admin, 'adminpass123')\n@@ -29,9 +30,10 @@\n         $manager->persist($admin);\n \n         // Responsable Catalogue\n         $catalogue = new Responsable();\n-        $catalogue->setNom('Responsable Catalogue');\n+        $catalogue->setNom('Responsable');\n+        $catalogue->setPrenom('Catalogue');\n         $catalogue->setEmail('catalogue@example.com');\n         $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n         $catalogue->setPassword(\n             $this->passwordHasher->hashPassword($catalogue, 'cataloguepass')\n@@ -39,9 +41,10 @@\n         $manager->persist($catalogue);\n \n         // Responsable Logistique\n         $logistique = new Responsable();\n-        $logistique->setNom('Responsable Logistique');\n+        $logistique->setNom('Responsable');\n+        $logistique->setPrenom('Logistique');\n         $logistique->setEmail('logistique@example.com');\n         $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n         $logistique->setPassword(\n             $this->passwordHasher->hashPassword($logistique, 'logipass123')\n@@ -49,9 +52,10 @@\n         $manager->persist($logistique);\n \n         // Responsable Formation Inter\n         $formationInter = new Responsable();\n-        $formationInter->setNom('Responsable Formation Inter');\n+        $formationInter->setNom('Responsable');\n+        $formationInter->setPrenom('Formation Inter');\n         $formationInter->setEmail('formation.inter@example.com');\n         $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n         $formationInter->setPassword(\n             $this->passwordHasher->hashPassword($formationInter, 'formationpass')\n"
                },
                {
                    "date": 1752149581963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n         $admin = new Responsable();\n         $admin->setNom('Admin');\n         $admin->setPrenom('G√©n√©ral');\n         $admin->setEmail('admin@example.com');\n+        $admin->setRoleResponsable('admin');\n         $admin->setRoles(['ROLE_ADMIN']);\n         $admin->setPassword(\n             $this->passwordHasher->hashPassword($admin, 'adminpass123')\n         );\n@@ -33,8 +34,9 @@\n         $catalogue = new Responsable();\n         $catalogue->setNom('Responsable');\n         $catalogue->setPrenom('Catalogue');\n         $catalogue->setEmail('catalogue@example.com');\n+        $catalogue->setRoleResponsable('catalogue');\n         $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n         $catalogue->setPassword(\n             $this->passwordHasher->hashPassword($catalogue, 'cataloguepass')\n         );\n@@ -44,8 +46,9 @@\n         $logistique = new Responsable();\n         $logistique->setNom('Responsable');\n         $logistique->setPrenom('Logistique');\n         $logistique->setEmail('logistique@example.com');\n+        $logistique->setRoleResponsable('logistique');\n         $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n         $logistique->setPassword(\n             $this->passwordHasher->hashPassword($logistique, 'logipass123')\n         );\n@@ -55,8 +58,9 @@\n         $formationInter = new Responsable();\n         $formationInter->setNom('Responsable');\n         $formationInter->setPrenom('Formation Inter');\n         $formationInter->setEmail('formation.inter@example.com');\n+        $formationInter->setRoleResponsable('formation_inter');\n         $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n         $formationInter->setPassword(\n             $this->passwordHasher->hashPassword($formationInter, 'formationpass')\n         );\n"
                },
                {
                    "date": 1752149867242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,48 +19,36 @@\n     public function load(ObjectManager $manager): void\n     {\n         // Admin\n         $admin = new Responsable();\n-        $admin->setNom('Admin');\n-        $admin->setPrenom('G√©n√©ral');\n         $admin->setEmail('admin@example.com');\n-        $admin->setRoleResponsable('admin');\n         $admin->setRoles(['ROLE_ADMIN']);\n         $admin->setPassword(\n             $this->passwordHasher->hashPassword($admin, 'adminpass123')\n         );\n         $manager->persist($admin);\n \n         // Responsable Catalogue\n         $catalogue = new Responsable();\n-        $catalogue->setNom('Responsable');\n-        $catalogue->setPrenom('Catalogue');\n         $catalogue->setEmail('catalogue@example.com');\n-        $catalogue->setRoleResponsable('catalogue');\n         $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n         $catalogue->setPassword(\n             $this->passwordHasher->hashPassword($catalogue, 'cataloguepass')\n         );\n         $manager->persist($catalogue);\n \n         // Responsable Logistique\n         $logistique = new Responsable();\n-        $logistique->setNom('Responsable');\n-        $logistique->setPrenom('Logistique');\n         $logistique->setEmail('logistique@example.com');\n-        $logistique->setRoleResponsable('logistique');\n         $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n         $logistique->setPassword(\n             $this->passwordHasher->hashPassword($logistique, 'logipass123')\n         );\n         $manager->persist($logistique);\n \n         // Responsable Formation Inter\n         $formationInter = new Responsable();\n-        $formationInter->setNom('Responsable');\n-        $formationInter->setPrenom('Formation Inter');\n         $formationInter->setEmail('formation.inter@example.com');\n-        $formationInter->setRoleResponsable('formation_inter');\n         $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n         $formationInter->setPassword(\n             $this->passwordHasher->hashPassword($formationInter, 'formationpass')\n         );\n"
                },
                {
                    "date": 1752149873663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <?php\n \n namespace App\\DataFixtures;\n \n-use App\\Entity\\Responsable;\n+use App\\Entity\\User; // ou App\\Entity\\Responsable si tu veux le faire avec cette classe\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n use Doctrine\\Persistence\\ObjectManager;\n use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n \n@@ -17,43 +17,71 @@\n     }\n \n     public function load(ObjectManager $manager): void\n     {\n-        // Admin\n-        $admin = new Responsable();\n+        // ADMIN\n+        $admin = new User();\n+        // $admin->setUsername('admin');\n         $admin->setEmail('admin@example.com');\n         $admin->setRoles(['ROLE_ADMIN']);\n-        $admin->setPassword(\n-            $this->passwordHasher->hashPassword($admin, 'adminpass123')\n-        );\n+        $admin->setPassword($this->passwordHasher->hashPassword($admin, 'adminpass'));\n         $manager->persist($admin);\n \n-        // Responsable Catalogue\n-        $catalogue = new Responsable();\n+        // VISITEUR\n+        $visiteur = new User();\n+        // $visiteur->setUsername('visiteur');\n+        $visiteur->setEmail('visiteur@example.com');\n+        $visiteur->setRoles(['ROLE_VISITEUR']);\n+        $visiteur->setPassword($this->passwordHasher->hashPassword($visiteur, 'visiteurpass'));\n+        $manager->persist($visiteur);\n+\n+        // CLIENT\n+        $client = new User();\n+        // $client->setUsername('client');\n+        $client->setEmail('client@example.com');\n+        $client->setRoles(['ROLE_CLIENT']);\n+        $client->setPassword($this->passwordHasher->hashPassword($client, 'clientpass'));\n+        $manager->persist($client);\n+\n+        // RESPONSABLE CATALOGUE\n+        $catalogue = new User();\n+        // $catalogue->setUsername('catalogue');\n         $catalogue->setEmail('catalogue@example.com');\n         $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n-        $catalogue->setPassword(\n-            $this->passwordHasher->hashPassword($catalogue, 'cataloguepass')\n-        );\n+        $catalogue->setPassword($this->passwordHasher->hashPassword($catalogue, 'cataloguepass'));\n         $manager->persist($catalogue);\n \n-        // Responsable Logistique\n-        $logistique = new Responsable();\n+        // RESPONSABLE LOGISTIQUE\n+        $logistique = new User();\n+        // $logistique->setUsername('logistique');\n         $logistique->setEmail('logistique@example.com');\n         $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n-        $logistique->setPassword(\n-            $this->passwordHasher->hashPassword($logistique, 'logipass123')\n-        );\n+        $logistique->setPassword($this->passwordHasher->hashPassword($logistique, 'logistiquepass'));\n         $manager->persist($logistique);\n \n-        // Responsable Formation Inter\n-        $formationInter = new Responsable();\n-        $formationInter->setEmail('formation.inter@example.com');\n+        // RESPONSABLE FORMATION INTER\n+        $formationInter = new User();\n+        // $formationInter->setUsername('formationinter');\n+        $formationInter->setEmail('formationinter@example.com');\n         $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n-        $formationInter->setPassword(\n-            $this->passwordHasher->hashPassword($formationInter, 'formationpass')\n-        );\n+        $formationInter->setPassword($this->passwordHasher->hashPassword($formationInter, 'interpass'));\n         $manager->persist($formationInter);\n \n+        // FORMATEUR\n+        $formateur = new User();\n+        // $formateur->setUsername('formateur');\n+        $formateur->setEmail('formateur@example.com');\n+        $formateur->setRoles(['ROLE_FORMATEUR']);\n+        $formateur->setPassword($this->passwordHasher->hashPassword($formateur, 'formateurpass'));\n+        $manager->persist($formateur);\n+\n+        // STAGIAIRE\n+        $stagiaire = new User();\n+        // $stagiaire->setUsername('stagiaire');\n+        $stagiaire->setEmail('stagiaire@example.com');\n+        $stagiaire->setRoles(['ROLE_STAGIAIRE']);\n+        $stagiaire->setPassword($this->passwordHasher->hashPassword($stagiaire, 'stagiairepass'));\n+        $manager->persist($stagiaire);\n+\n         $manager->flush();\n     }\n }\n"
                },
                {
                    "date": 1752150057215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n <?php\n \n namespace App\\DataFixtures;\n \n-use App\\Entity\\User; // ou App\\Entity\\Responsable si tu veux le faire avec cette classe\n+use App\\Entity\\Responsable;\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n use Doctrine\\Persistence\\ObjectManager;\n use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n \n-class AppFixtures extends Fixture\n+class UserFixtures extends Fixture\n {\n     private UserPasswordHasherInterface $passwordHasher;\n \n     public function __construct(UserPasswordHasherInterface $passwordHasher)\n@@ -17,71 +17,55 @@\n     }\n \n     public function load(ObjectManager $manager): void\n     {\n-        // ADMIN\n-        $admin = new User();\n-        // $admin->setUsername('admin');\n-        $admin->setEmail('admin@example.com');\n-        $admin->setRoles(['ROLE_ADMIN']);\n-        $admin->setPassword($this->passwordHasher->hashPassword($admin, 'adminpass'));\n-        $manager->persist($admin);\n+        $usersData = [\n+            [\n+                'nom' => 'Admin',\n+                'prenom' => 'G√©n√©ral',\n+                'email' => 'admin@example.com',\n+                'role_responsable' => 'admin',\n+                'roles' => ['ROLE_ADMIN'],\n+                'password' => 'adminpass123',\n+            ],\n+            [\n+                'nom' => 'Responsable',\n+                'prenom' => 'Catalogue',\n+                'email' => 'catalogue@example.com',\n+                'role_responsable' => 'catalogue',\n+                'roles' => ['ROLE_RESPONSABLE_CATALOGUE'],\n+                'password' => 'cataloguepass',\n+            ],\n+            [\n+                'nom' => 'Responsable',\n+                'prenom' => 'Logistique',\n+                'email' => 'logistique@example.com',\n+                'role_responsable' => 'logistique',\n+                'roles' => ['ROLE_RESPONSABLE_LOGISTIQUE'],\n+                'password' => 'logipass123',\n+            ],\n+            [\n+                'nom' => 'Responsable',\n+                'prenom' => 'Formation Inter',\n+                'email' => 'formation.inter@example.com',\n+                'role_responsable' => 'formation_inter',\n+                'roles' => ['ROLE_RESPONSABLE_FORMATION_INTER'],\n+                'password' => 'formationpass',\n+            ],\n+        ];\n \n-        // VISITEUR\n-        $visiteur = new User();\n-        // $visiteur->setUsername('visiteur');\n-        $visiteur->setEmail('visiteur@example.com');\n-        $visiteur->setRoles(['ROLE_VISITEUR']);\n-        $visiteur->setPassword($this->passwordHasher->hashPassword($visiteur, 'visiteurpass'));\n-        $manager->persist($visiteur);\n+        foreach ($usersData as $data) {\n+            $user = new Responsable();\n+            $user->setNom($data['nom']);\n+            $user->setPrenom($data['prenom']);\n+            $user->setEmail($data['email']);\n+            $user->setRoleResponsable($data['role_responsable']);\n+            $user->setRoles($data['roles']);\n+            $user->setPassword(\n+                $this->passwordHasher->hashPassword($user, $data['password'])\n+            );\n+            $manager->persist($user);\n+        }\n \n-        // CLIENT\n-        $client = new User();\n-        // $client->setUsername('client');\n-        $client->setEmail('client@example.com');\n-        $client->setRoles(['ROLE_CLIENT']);\n-        $client->setPassword($this->passwordHasher->hashPassword($client, 'clientpass'));\n-        $manager->persist($client);\n-\n-        // RESPONSABLE CATALOGUE\n-        $catalogue = new User();\n-        // $catalogue->setUsername('catalogue');\n-        $catalogue->setEmail('catalogue@example.com');\n-        $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n-        $catalogue->setPassword($this->passwordHasher->hashPassword($catalogue, 'cataloguepass'));\n-        $manager->persist($catalogue);\n-\n-        // RESPONSABLE LOGISTIQUE\n-        $logistique = new User();\n-        // $logistique->setUsername('logistique');\n-        $logistique->setEmail('logistique@example.com');\n-        $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n-        $logistique->setPassword($this->passwordHasher->hashPassword($logistique, 'logistiquepass'));\n-        $manager->persist($logistique);\n-\n-        // RESPONSABLE FORMATION INTER\n-        $formationInter = new User();\n-        // $formationInter->setUsername('formationinter');\n-        $formationInter->setEmail('formationinter@example.com');\n-        $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n-        $formationInter->setPassword($this->passwordHasher->hashPassword($formationInter, 'interpass'));\n-        $manager->persist($formationInter);\n-\n-        // FORMATEUR\n-        $formateur = new User();\n-        // $formateur->setUsername('formateur');\n-        $formateur->setEmail('formateur@example.com');\n-        $formateur->setRoles(['ROLE_FORMATEUR']);\n-        $formateur->setPassword($this->passwordHasher->hashPassword($formateur, 'formateurpass'));\n-        $manager->persist($formateur);\n-\n-        // STAGIAIRE\n-        $stagiaire = new User();\n-        // $stagiaire->setUsername('stagiaire');\n-        $stagiaire->setEmail('stagiaire@example.com');\n-        $stagiaire->setRoles(['ROLE_STAGIAIRE']);\n-        $stagiaire->setPassword($this->passwordHasher->hashPassword($stagiaire, 'stagiairepass'));\n-        $manager->persist($stagiaire);\n-\n         $manager->flush();\n     }\n }\n"
                },
                {
                    "date": 1752150146563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n <?php\n \n namespace App\\DataFixtures;\n \n-use App\\Entity\\Responsable;\n+use App\\Entity\\User; // ou App\\Entity\\Responsable si tu veux le faire avec cette classe\n use Doctrine\\Bundle\\FixturesBundle\\Fixture;\n use Doctrine\\Persistence\\ObjectManager;\n use Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n \n-class UserFixtures extends Fixture\n+class AppFixtures extends Fixture\n {\n     private UserPasswordHasherInterface $passwordHasher;\n \n     public function __construct(UserPasswordHasherInterface $passwordHasher)\n@@ -17,55 +17,71 @@\n     }\n \n     public function load(ObjectManager $manager): void\n     {\n-        $usersData = [\n-            [\n-                'nom' => 'Admin',\n-                'prenom' => 'G√©n√©ral',\n-                'email' => 'admin@example.com',\n-                'role_responsable' => 'admin',\n-                'roles' => ['ROLE_ADMIN'],\n-                'password' => 'adminpass123',\n-            ],\n-            [\n-                'nom' => 'Responsable',\n-                'prenom' => 'Catalogue',\n-                'email' => 'catalogue@example.com',\n-                'role_responsable' => 'catalogue',\n-                'roles' => ['ROLE_RESPONSABLE_CATALOGUE'],\n-                'password' => 'cataloguepass',\n-            ],\n-            [\n-                'nom' => 'Responsable',\n-                'prenom' => 'Logistique',\n-                'email' => 'logistique@example.com',\n-                'role_responsable' => 'logistique',\n-                'roles' => ['ROLE_RESPONSABLE_LOGISTIQUE'],\n-                'password' => 'logipass123',\n-            ],\n-            [\n-                'nom' => 'Responsable',\n-                'prenom' => 'Formation Inter',\n-                'email' => 'formation.inter@example.com',\n-                'role_responsable' => 'formation_inter',\n-                'roles' => ['ROLE_RESPONSABLE_FORMATION_INTER'],\n-                'password' => 'formationpass',\n-            ],\n-        ];\n+        // ADMIN\n+        $admin = new User();\n+        // $admin->setUsername('admin');\n+        $admin->setEmail('admin@example.com');\n+        $admin->setRoles(['ROLE_ADMIN']);\n+        $admin->setPassword($this->passwordHasher->hashPassword($admin, 'adminpass'));\n+        $manager->persist($admin);\n \n-        foreach ($usersData as $data) {\n-            $user = new Responsable();\n-            $user->setNom($data['nom']);\n-            $user->setPrenom($data['prenom']);\n-            $user->setEmail($data['email']);\n-            $user->setRoleResponsable($data['role_responsable']);\n-            $user->setRoles($data['roles']);\n-            $user->setPassword(\n-                $this->passwordHasher->hashPassword($user, $data['password'])\n-            );\n-            $manager->persist($user);\n-        }\n+        // VISITEUR\n+        $visiteur = new User();\n+        // $visiteur->setUsername('visiteur');\n+        $visiteur->setEmail('visiteur@example.com');\n+        $visiteur->setRoles(['ROLE_VISITEUR']);\n+        $visiteur->setPassword($this->passwordHasher->hashPassword($visiteur, 'visiteurpass'));\n+        $manager->persist($visiteur);\n \n+        // CLIENT\n+        $client = new User();\n+        // $client->setUsername('client');\n+        $client->setEmail('client@example.com');\n+        $client->setRoles(['ROLE_CLIENT']);\n+        $client->setPassword($this->passwordHasher->hashPassword($client, 'clientpass'));\n+        $manager->persist($client);\n+\n+        // RESPONSABLE CATALOGUE\n+        $catalogue = new User();\n+        // $catalogue->setUsername('catalogue');\n+        $catalogue->setEmail('catalogue@example.com');\n+        $catalogue->setRoles(['ROLE_RESPONSABLE_CATALOGUE']);\n+        $catalogue->setPassword($this->passwordHasher->hashPassword($catalogue, 'cataloguepass'));\n+        $manager->persist($catalogue);\n+\n+        // RESPONSABLE LOGISTIQUE\n+        $logistique = new User();\n+        // $logistique->setUsername('logistique');\n+        $logistique->setEmail('logistique@example.com');\n+        $logistique->setRoles(['ROLE_RESPONSABLE_LOGISTIQUE']);\n+        $logistique->setPassword($this->passwordHasher->hashPassword($logistique, 'logistiquepass'));\n+        $manager->persist($logistique);\n+\n+        // RESPONSABLE FORMATION INTER\n+        $formationInter = new User();\n+        // $formationInter->setUsername('formationinter');\n+        $formationInter->setEmail('formationinter@example.com');\n+        $formationInter->setRoles(['ROLE_RESPONSABLE_FORMATION_INTER']);\n+        $formationInter->setPassword($this->passwordHasher->hashPassword($formationInter, 'interpass'));\n+        $manager->persist($formationInter);\n+\n+        // FORMATEUR\n+        $formateur = new User();\n+        // $formateur->setUsername('formateur');\n+        $formateur->setEmail('formateur@example.com');\n+        $formateur->setRoles(['ROLE_FORMATEUR']);\n+        $formateur->setPassword($this->passwordHasher->hashPassword($formateur, 'formateurpass'));\n+        $manager->persist($formateur);\n+\n+        // STAGIAIRE\n+        $stagiaire = new User();\n+        // $stagiaire->setUsername('stagiaire');\n+        $stagiaire->setEmail('stagiaire@example.com');\n+        $stagiaire->setRoles(['ROLE_STAGIAIRE']);\n+        $stagiaire->setPassword($this->passwordHasher->hashPassword($stagiaire, 'stagiairepass'));\n+        $manager->persist($stagiaire);\n+\n         $manager->flush();\n     }\n }\n"
                }
            ],
            "date": 1752146820640,
            "name": "Commit-0",
            "content": "// src/DataFixtures/AppFixtures.php\nnamespace App\\DataFixtures;\n\nuse App\\Entity\\User; // Ou App\\Entity\\Responsable\nuse Doctrine\\Bundle\\FixturesBundle\\Fixture;\nuse Doctrine\\Persistence\\ObjectManager;\nuse Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\n\nclass AppFixtures extends Fixture\n{\n    private UserPasswordHasherInterface $passwordHasher;\n\n    public function __construct(UserPasswordHasherInterface $passwordHasher)\n    {\n        $this->passwordHasher = $passwordHasher;\n    }\n\n    public function load(ObjectManager $manager): void\n    {\n        $user = new User(); // Ou new Responsable()\n        $user->setEmail('admin@example.com');\n        $user->setRoles(['ROLE_ADMIN']);\n        $hashedPassword = $this->passwordHasher->hashPassword(\n            $user,\n            'password' // Le mot de passe en clair\n        );\n        $user->setPassword($hashedPassword);\n\n        $manager->persist($user);\n        $manager->flush();\n    }\n}"
        }
    ]
}