security:
    password_hashers:
        App\Entity\Responsable:
            algorithm: auto
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: login
                check_path: login
            logout:
                path: logout
                target: /

    access_control:
        
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/public, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_VISITEUR }
        - { path: ^/client, roles: ROLE_CLIENT }
        - { path: ^/catalogue, roles: ROLE_RESPONSABLE_CATALOGUE }
        - { path: ^/logistique, roles: ROLE_RESPONSABLE_LOGISTIQUE }
        - { path: ^/formation-inter, roles: ROLE_RESPONSABLE_FORMATION_INTER }
        - { path: ^/admin, roles: ROLE_ADMIN }
        
    role_hierarchy:
        ROLE_ADMIN: [ROLE_RESPONSABLE_CATALOGUE, ROLE_RESPONSABLE_LOGISTIQUE, ROLE_RESPONSABLE_FORMATION_INTER, ROLE_CLIENT, ROLE_VISITEUR]
        ROLE_RESPONSABLE_CATALOGUE: [ROLE_CLIENT, ROLE_VISITEUR]
        ROLE_RESPONSABLE_LOGISTIQUE: [ROLE_CLIENT, ROLE_VISITEUR]
        ROLE_RESPONSABLE_FORMATION_INTER: [ROLE_CLIENT, ROLE_VISITEUR]
        ROLE_CLIENT: [ROLE_VISITEUR]

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
